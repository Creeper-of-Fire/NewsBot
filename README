# NewsBot 📰

NewsBot 是一款模块化的 Discord 机器人，专为自动化新闻管理和高级社区通知而设计。它通过 Docker 进行容器化，并配备了一键式部署脚本，使得维护和更新变得异常简单。

## ✨ 核心功能

-   **🤖 自动化论坛管理**:
    -   每日定时在指定论坛频道发布“每日快讯”帖子。
    -   自动归档过期的快讯帖子，并为其添加“PAST”标签。
    -   自动归档其他长时间不活跃的帖子（可配置例外）。
    -   置顶并锁定当天的快讯帖子，保持版面整洁。

-   **🔔 虚拟身份组与通知系统**:
    -   允许用户通过交互式面板自助订阅/退订**虚拟通知组**（如“社区快递订阅”）。
    -   订阅者会收到通知，但不会被赋予实际的 Discord 身份组，避免了身份组列表的混乱。
    -   支持对虚拟组进行**幽灵提及 (Ghost Ping)**，在不打扰频道的情况下通知用户。

-   **Flexible 灵活的 @提及系统**:
    -   管理员可以配置多个可提及的目标，包括真实身份组和虚拟身份组。
    -   通过 `/at` 指令，根据权限安全地提及指定群体，并可附带格式化的 Embed 消息。
    -   指令具有自动补全功能，仅显示用户有权提及的目标。

-   **🚀 一键式部署**:
    -   项目完全 **Docker化**，确保环境一致性。
    -   提供 `deploy.ps1` (PowerShell) 脚本，可实现从本地打包、上传到远程服务器、自动构建并重启 Docker 容器的全流程自动化。

-   **🛠️ 管理员工具**:
    -   **系统状态监控**: 通过 `/系统状态` 指令查看机器人进程及服务器的 CPU、内存等详细信息。
    -   **数据备份**: 一键打包并发送所有持久化数据（如用户订阅信息）。
    -   **动态内容配置**: 无需修改代码，通过指令配置消息链接，即可让机器人动态拉取和展示特定消息的 Embed 内容。

-   **🧩 高度模块化的架构**:
    -   代码基于 `discord.py` 的 Cogs 进行组织，功能高度解耦（核心、@功能、论坛管理、虚拟身份组）。
    -   通过 `config.py` 和 `config_data.py` 进行清晰的配置管理，支持多服务器独立配置。

## ⚙️ 本地安装与设置

### 1. 先决条件
-   Python 3.12+
-   Git

### 2. 克隆仓库
```bash
git clone <你的仓库URL>
cd NewsBot
```

### 3. 创建并激活虚拟环境
```bash
# Windows
python -m venv .venv
.\.venv\Scripts\activate

# Linux / macOS
python3 -m venv .venv
source .venv/bin/activate
```

### 4. 安装依赖
```bash
pip install -r requirements.txt
```

### 5. 配置文件
你需要创建以下几个关键的配置文件。项目中的 `配置文件示例` 目录提供了模板。

1.  **`.env`**: 在项目根目录创建此文件，用于存放机器人 Token。
    ```env
    # .env
    DISCORD_BOT_TOKEN=把你的机器人TOKEN粘贴到这里
    # 如果需要代理，取消注释并填写地址
    # DISCORD_BOT_PROXY=http://127.0.0.1:7890
    ```

2.  **`config.py`**: 这是机器人的主配置文件，通常你只需要检查其中的 `SUPER_ADMIN_USER_IDS` 和 `ADMIN_ROLE_IDS/ADMIN_USER_IDS` 是否正确。

3.  **`config_data.py`**: **这是最重要的配置文件**，它定义了每个服务器的具体功能。你需要：
    -   将 `GUILD_CONFIGS` 字典中的键 `1265862009673486408` 和 `1134557553011998840` 替换为**你自己的服务器ID**。
    -   仔细修改每个服务器下的 `at_config` 和 `forum_manager_config`，将里面的**身份组ID**和**频道ID**替换为你自己服务器的正确ID。

### 6. 运行机器人
完成以上配置后，在激活了虚拟环境的终端中运行：
```bash
python main.py
```

## 🚀 生产环境部署 (使用 Docker)

本机器人推荐使用 Docker 进行部署，并利用 `deploy.ps1` 脚本实现自动化。

### 1. 先决条件
-   **本地**:
    -   PowerShell
    -   [7-Zip](https://www.7-zip.org/) (请确保 `7z.exe` 在系统 PATH 中，或修改 `deploy.ps1` 中的路径)
    -   可以 SSH 连接到远程服务器的私钥。
-   **远程服务器**:
    -   已安装 Docker 和 Docker Compose。
    -   可以被本地机器通过 SSH 免密登录。

### 2. 部署配置
1.  **`deploy.env`**: 在项目根目录创建此文件，填入你的远程服务器信息。
    ```env
    # deploy.env
    SSH_HOST=你的服务器IP地址
    SSH_USER=你的服务器用户名 (如 root)
    SSH_PRIVATE_KEY_PATH=C:\Users\你的用户名\.ssh\你的私钥文件
    ```
2.  **`.env`**: 确保你的 `.env` 文件包含了正确的 `DISCORD_BOT_TOKEN`。部署脚本会将此文件排除在打包之外，你需要**手动在远程服务器的项目目录下也创建一个 `.env` 文件**。

### 3. 执行部署
在本地机器的项目根目录下，打开 PowerShell 终端，运行：
```powershell
.\deploy.ps1
```
脚本会自动完成以下所有操作：
1.  打包项目文件（排除敏感文件和临时文件）。
2.  通过 SCP 将压缩包上传到服务器。
3.  通过 SSH 连接到服务器，执行以下远程操作：
    -   解压文件到项目目录。
    -   使用 `docker-compose up -d --build` 构建并启动机器人容器。
    -   清理服务器上的临时压缩包和无用的 Docker 镜像。
4.  部署成功后，脚本会自动附加到容器的日志上，让你实时查看机器人启动状态。按 `Ctrl+C` 退出日志查看。

## 📝 配置详解 (`config_data.py`)

这是功能配置的核心，所有按服务器隔离的功能都在这里定义。

### `at_config` (@提及功能)

`mention_map` 定义了所有可用的提及目标。

-   **真实身份组 (`type: "role"`)**:
    ```python
    "订阅日报/新闻": {
        "type": "role",
        "id": 1395377389365755948,       # 要提及的身份组ID
        "allowed_by_roles": [ 1337450755791261766, ... ] # 允许使用此提及的身份组ID列表
    }
    ```
-   **虚拟身份组 (`type: "virtual"`)**:
    ```python
    "社区快递": {
        "type": "virtual",
        "name": "📦 社区快递订阅",          # 在面板上显示的名称
        "description": "订阅后，您将收到...", # 在面板上显示的描述
        "allowed_by_roles": [ ... ]       # 允许使用此提及的身份组ID列表
    }
    ```

### `forum_manager_config` (论坛管理)

```python
"forum_manager_config": {
    "enabled": True,                          # 是否为该服务器启用此功能
    "forum_channel_id": 1399019985460002958,   # 你的新闻论坛频道ID
    "timezone": "Asia/Shanghai",              # 服务器所在时区

    # --- 标签ID配置 ---
    "briefing_tag_id": 1399022830477377546,     # “每日快讯”标签ID
    "past_briefing_tag_id": 1399022946835497062,# “每日快讯·PAST”标签ID
    "long_term_tag_id": 1399025701591580782,   # “长期更新”标签ID

    # --- 标签到虚拟身份组的映射 ---
    # 用于“通知并更新快讯”指令，当帖子有对应标签时，会自动幽灵提及订阅了该虚拟组的用户
    "tag_to_virtual_role_map": {
        "1399021515416141854": "社区快递", # 标签ID -> 虚拟组的key
        ...
    }
}
```

## 📜 主要指令

-   `/新闻丨核心 系统状态`: 显示机器人和服务器的详细运行状态。
-   `/新闻丨核心 获取数据备份`: 将所有数据文件打包成 .zip 发送给你。
-   `/新闻丨核心 配置embed链接 [module] [url]`: 为内部模块配置一个动态展示的Discord消息链接。

-   `/新闻丨论坛 手动执行每日任务`: 手动触发一次每日发帖和归档流程。
-   `/新闻丨论坛 通知并更新快讯`: 在论坛帖子内使用，会自动提及相关订阅者，并将帖子链接更新到当天的“每日快讯”中。

-   `/发送at通知 [target] [message] [ghost_ping]`: 根据配置安全地提及一个真实或虚拟身份组。
-   `/发送永久新闻面板`: 在当前频道发送一个永久的“新闻通知自助服务”面板，供所有用户订阅/退订通知。

## 📄 许可证

本项目采用 [MIT License](LICENSE) 授权。